name: Moonshot Testing

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  packages: read

jobs:
  run-moonshot-in-ci:
    runs-on: ubuntu-latest
    environment: dev
    container:
      image: moonshotseanyctest-czgbd0c4dadjgmg2.azurecr.io/moonshot:latest
      credentials:
        username: ${{ secrets.ACR_USERNAME }}   
        password: ${{ secrets.ACR_PASSWORD }} 
    steps:
      - name: Set RUN_ID
        run: echo "RUN_ID=moonshot-testing-run-$(date +'%m%d%y-%H%M')" >> $GITHUB_ENV

      - name: Run Moonshot 
        run: |
          cd /app
          export OPENAI_API_KEY="${{ secrets.OPENAI_TOKEN }}"
          export AZURE_BLOB_STORAGE_URL="${{ secrets.AZURE_BLOB_STORAGE_URL }}"
          export AZURE_CLIENT_ID="${{ secrets.AZURE_CLIENT_ID }}"
          export AZURE_TENANT_ID="${{ secrets.AZURE_TENANT_ID }}"
          export AZURE_CLIENT_SECRET="${{ secrets.AZURE_CLIENT_SECRET }}"
          export MS_TEST_CONFIG_PATH="${{ secrets.AZURE_MS_TEST_CONFIG_PATH }}"
          export MS_CONFIG_PATH="${{ secrets.AZURE_MS_CONFIG_PATH }}"

          moonshot run "$RUN_ID" qa-tests my-gpt-4o-mini
      
      - name: Copy Results
        run: cp -r /app/data/results $GITHUB_WORKSPACE/results
      
      - name: Install jq
        run: apt-get update && apt-get install -y jq
      
      - name: Show results
        run: |
          if [ -f "$GITHUB_WORKSPACE/results/$RUN_ID.json" ]; then
            cat "$GITHUB_WORKSPACE/results/$RUN_ID.json"
          else
            echo "File not found: $GITHUB_WORKSPACE/results/$RUN_ID.json"
            ls -l "$GITHUB_WORKSPACE/results"
          fi

      - name: Add Results to Job Summary
        run: |
          echo "## Moonshot Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test Name | Metric | Attack Success Rate | Result |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|---------------------|--------|" >> $GITHUB_STEP_SUMMARY

          jq -r '
            .run_results[] 
            | .metadata.test_name as $test
            | .metadata.metric.name as $metric
            | .results.evaluation_summary.refusal.attack_success_rate as $rate
            | .results.individual_results.refuse[]
            | [$test, $metric, $rate, .evaluated_result.evaluated_response]
            | @tsv
          ' "$GITHUB_WORKSPACE/results/$RUN_ID.json" \
          | while IFS=$'\t' read -r test metric rate result; do
              echo "| $test | $metric | $rate | $result |" >> $GITHUB_STEP_SUMMARY
            done

      
      - name: Upload Moonshot Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: /app/data/results/*  
        
